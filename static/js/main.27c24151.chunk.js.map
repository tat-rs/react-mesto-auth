{"version":3,"sources":["images/logo.svg","components/HamburgerButton.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","hooks/useForm.js","components/PopupWithForm.js","components/AddPlacePopup .js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","utils/api.js","components/PopupConfirmation.js","components/AuthForm.js","components/Login.js","components/Register.js","images/icon-success.svg","images/icon-error.svg","components/InfoTooltip.js","components/ProtectedRoute.js","utils/auth.js","components/App.js","hooks/useScrollLock.js","index.js"],"names":["HamburgerButton","props","className","onClick","handleMenuClick","isMenuOpen","Header","signOut","signOutClick","closeAllPopups","isLoggedIn","useremail","to","src","headerLogo","alt","exact","path","CurrentUserContext","React","createContext","Card","currentUserData","useContext","isOwner","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onBtnDelete","onCardClick","link","name","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","Footer","currentYear","Date","getFullYear","useForm","useState","values","setValues","errors","setErrors","isValid","setValid","handleChange","evt","target","value","validationMessage","closest","checkValidity","PopupWithForm","isOpen","onMouseDown","onClose","stopPropagation","onSubmit","noValidate","title","children","disabledButton","disabled","button","AddPlacePopup","textOfButton","loader","setLoader","useEffect","preventDefault","subtitle","id","placeholder","minLength","maxLength","onChange","required","ImagePopup","EditProfilePopup","onUpdateUser","EditAvatarPopup","onUpdateAvatar","api","url","headers","this","_url","_headers","res","ok","json","Promise","reject","status","fetch","method","then","_checkResponse","info","body","JSON","stringify","user","newCard","cardId","authorization","PopupConfirmation","removeCard","AuthForm","email","password","Login","onLogin","Register","onRegister","InfoToolTip","isSuccess","iconSuccess","iconError","ProtectedRoute","Component","component","auth","error","token","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isPopupConfirmationOpen","setIsPopupConfirmationOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","setCards","setLoggedIn","setEmail","isInfoToolTipOpen","setInfoToolTipOpen","setSuccess","setMenuOpen","lockScroll","useCallback","scrollBarCompensation","window","innerWidth","document","offsetWidth","style","overflow","paddingRight","unlockScroll","history","useHistory","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handlePopupConfirmationClick","handleLogin","handleUserEmail","userEmail","handleInfoTooltipClick","handleCardLike","element","changeLikeCardStatus","state","catch","err","console","log","getAllCards","cardData","getUserInfo","userData","localStorage","getItem","getContent","data","push","tokenCheck","Provider","removeItem","userPassword","register","authorize","setItem","setUserInfo","addNewCard","newAddPlace","setUserAvatar","deleteCard","filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.27c24151.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import React from \"react\";\r\n\r\nfunction HamburgerButton(props) {\r\n  return (\r\n    <div className='button link' onClick={props.handleMenuClick}>\r\n      <span className={`button__line ${props.isMenuOpen ? 'button__line_left' : '' }`}/>\r\n      <span className={`button__line ${props.isMenuOpen ? 'button__line_hidden' : '' }`}/>\r\n      <span className={`button__line ${props.isMenuOpen ? 'button__line_right' : '' }`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HamburgerButton","import React from 'react';\r\nimport headerLogo from '../images/logo.svg';\r\nimport {Link, Route, Switch } from 'react-router-dom';\r\nimport HamburgerButton from './HamburgerButton';\r\n\r\nfunction Header(props) {\r\n\r\n  //выход из профиля\r\n  function signOut(){\r\n    props.signOutClick()\r\n    props.closeAllPopups()\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      {props.isMenuOpen && (\r\n        \r\n        <div className='header__container header__container_type_burger-menu'>\r\n          {props.isLoggedIn ? (<p className='header__user'>{props.useremail}</p>) : ''}\r\n          <Link to='/sign-in' className='header__link-push link' onClick={signOut}>Выйти</Link>\r\n        </div>\r\n        )\r\n      }\r\n\r\n      <header className='header page__header'>\r\n        <Link className='logo link' to='/'>\r\n          <img className='header__logo' src={headerLogo} alt=\"Логотип\" />\r\n        </Link>\r\n\r\n      <Switch>\r\n\r\n        <Route exact path='/'>\r\n          <div className='header__container header__container_type_profile-menu'>\r\n            <p className='header__user'>{props.useremail}</p>\r\n            <Link to='/sign-in' className='header__link-push link' onClick={signOut}>Выйти</Link>\r\n          </div>\r\n\r\n          <HamburgerButton handleMenuClick={props.handleMenuClick} isMenuOpen={props.isMenuOpen}/>\r\n        \r\n        </Route>\r\n\r\n        <Route path='/sign-up'>\r\n          <div className='header__container'>\r\n            <Link to='/sign-in' className='header__link-push link' onClick={signOut}>Войти</Link>\r\n          </div>\r\n        </Route>\r\n\r\n        <Route path='/sign-in'>\r\n          <div className='header__container'>\r\n            <Link to='/sign-up' className='header__link-push link header__link-push_color_grey' onClick={signOut}>Регистрация</Link>\r\n          </div>\r\n        </Route>\r\n\r\n      </Switch>\r\n\r\n      </header>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\nfunction Card(props) {\r\n    \r\n  //сохранение данных карточки при клике\r\n  function handleClick() {\r\n    props.onCardClick({\r\n      name: props.card.name, \r\n      link: props.card.link\r\n    })\r\n  }\r\n  //функция постановки лайка/дизлайка\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card)\r\n  }\r\n  //функция открытия удаления карточки\r\n  function handleDeleteClick() {\r\n    props.onBtnDelete() //открытие попапа подтверждения\r\n    //сохраняем id карточки по которой был клик\r\n    props.onCardClick({\r\n      _id: props.card._id,\r\n    })\r\n  }\r\n\r\n  const currentUserData = React.useContext(CurrentUserContext); // подписались на контекст текущих данных пользователя\r\n  \r\n  const isOwner = props.card.owner._id === currentUserData._id; // определяем является ли пользователем текущим\r\n\r\n  const cardDeleteButtonClassName = (`cards__delete ${isOwner ? 'cards__delete_visible' : ''}`); // определяем класс кнопки удаления\r\n\r\n  const isLiked = props.card.likes.some(i => i._id === currentUserData._id); // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n\r\n  const cardLikeButtonClassName = (`cards__button ${isLiked ? 'cards__button_active' : ''}`); // определяем класс для кнопки лайка\r\n  \r\n  return (\r\n    <>\r\n      <li className='cards__item'>\r\n        <button className={cardDeleteButtonClassName} type='button' aria-label='Удалить' onClick={handleDeleteClick}></button>\r\n        <img className='cards__image' src={`${props.card.link}`} alt={`${props.card.name}`} onClick={handleClick} />\r\n        <div className='cards__desc'>\r\n          <h2 className='cards__subtitle'>{props.card.name}</h2>\r\n          <div className='cards__container-likes'>\r\n            <button className={cardLikeButtonClassName} type='button' aria-label='Лайк' onClick={handleLikeClick} ></button>\r\n            <p className='cards__sum-likes'>{props.card.likes.length}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n\r\n  const currentUserData = React.useContext(CurrentUserContext); //подключаем контект текущих данных пользователя\r\n \r\n  return (\r\n    <>\r\n      <main className='content page__section'>\r\n        <section className='profile page__profile'>\r\n          <div className='profile__container'>\r\n            <button className='profile__image-edit' onClick={props.onEditAvatar}>\r\n              <img className='profile__image' src={currentUserData.avatar} alt='Фото пользователя' />\r\n            </button>\r\n            <div className='profile__info'>\r\n              <h1 className='profile__name'>{currentUserData.name}</h1>\r\n              <button className='profile__edit link' type='button' aria-label='Редактировать данные профиля' onClick={props.onEditProfile}></button>\r\n              <p className='profile__desc'>{currentUserData.about}</p>\r\n            </div>\r\n          </div>\r\n          <button className='profile__button link' type='button' aria-label='Добавить новую карточку' onClick={props.onAddPlace}></button>\r\n        </section>\r\n\r\n          <section className='cards page__cards' aria-label='Карточки с изображениями'>\r\n            <ul className='cards__list'>\r\n              \r\n              {props.cards.map((card) => (\r\n                <Card card={card} key={card._id} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onBtnDelete={props.onBtnDelete}/>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n      </main>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n\r\n  const currentYear = new Date().getFullYear(); //сохранен текущий год в переменной\r\n \r\n  return (\r\n    <>\r\n      <footer className='footer page__section'>\r\n        <p className='footer__author'>&copy; {currentYear} Mesto Russia</p>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nexport function useForm() {\r\n\r\n  const [values, setValues] = React.useState({}); //состояние значений инпутов формы\r\n\r\n  const [errors, setErrors] = React.useState({}); //состояние ошибок инпутов формы\r\n\r\n  const [isValid, setValid] = React.useState(false); //состояние валидности формы\r\n\r\n\r\n  function handleChange(evt) {\r\n\r\n    let name = evt.target.name\r\n    let value = evt.target.value\r\n\r\n    //объект с инф-ии о значениях в инпуте\r\n    setValues({\r\n      ...values,\r\n      [name] : value,\r\n    })\r\n\r\n    //объект с инф-ии об ошибках в инпуте\r\n    setErrors({\r\n      ...errors,\r\n      [evt.target.name]: evt.target.validationMessage\r\n    })\r\n\r\n    setValid(evt.target.closest(\".form\").checkValidity());//состояние валидности формы\r\n  }\r\n\r\n  return {\r\n    values,\r\n    errors,\r\n    isValid,\r\n    setValues,\r\n    setErrors,\r\n    setValid,\r\n    handleChange,\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n return (\r\n    <>\r\n      <div className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : '' }`} onMouseDown ={props.onClose}>\r\n        <div className='popup__container' onMouseDown ={(evt) => evt.stopPropagation()}>\r\n          <button className='popup__close link' type='button' aria-label='Закрыть форму' onClick={props.onClose}></button>\r\n          <form className={`popup__form form form_type_${props.name}`} name={`form-${props.name}`} onSubmit={props.onSubmit} noValidate>\r\n            <h2 className=\"form__title\">{`${props.title}`}</h2>\r\n            <div className=\"form__items\">\r\n              {props.children}\r\n            </div>\r\n            <button className={`form__button ${props.disabledButton ? 'form__button_disabled' : ''}`} type=\"submit\" disabled={props.disabledButton}>{props.button}</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from \"react\";\r\nimport { useForm } from \"../hooks/useForm\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n  const [loader, setLoader] = React.useState(props.textOfButton); //начальное значение кнопки\r\n\r\n  const {values, errors, isValid, handleChange, setValues, setErrors, setValid} = useForm();\r\n  \r\n  //очищаем значение инпутов при монтировании\r\n  React.useEffect(() => {\r\n    setValid(false)\r\n    setValues({})\r\n    setErrors({})\r\n    setLoader(props.textOfButton);\r\n  }, [props.isOpen, props.textOfButton, setValues, setErrors, setValid]);\r\n\r\n  //передаем новые значения инпутов по сабмиту\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n  \r\n    // Передаём значения управляемых компонентов во внешний обработчик (название и ссылка на изображение)\r\n    props.onAddPlace({\r\n      subtitle: values.subtitle,\r\n      link: values.link,\r\n    });\r\n\r\n    setLoader('Создание...');\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm name='new-card' title='Новое место' textOfButton='Создать' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} button={loader} disabledButton={!isValid}>\r\n\r\n        <input className=\"form__item\" id=\"image-subtitle\" type=\"text\" name=\"subtitle\" placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" value={values.subtitle || ''} onChange={handleChange} required />\r\n        <span className=\"form__error image-subtitle-error\">{!isValid && errors.subtitle}</span>\r\n        <input className=\"form__item\" id=\"image-link\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" value={values.link || ''} onChange={handleChange} required />\r\n        <span className=\"form__error image-link-error\">{!isValid && errors.link}</span>\r\n\r\n      </PopupWithForm>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup","import React from \"react\";\r\n\r\nfunction ImagePopup(props) {\r\n  \r\n  return (\r\n    <>\r\n      <div className={`popup popup_type_image ${props.card.link && 'popup_opened'}`} onClick={props.onClose}>\r\n        <div className=\"popup__container popup__container_transparent\" onClick={(evt) => evt.stopPropagation()}>\r\n          <button className=\"popup__close link\" type=\"button\" aria-label=\"Закрыть\" onClick={props.onClose}></button>\r\n          <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\r\n          <h2 className=\"popup__subtitle\">{props.card.name}</h2>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport {useForm} from '../hooks/useForm'\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n  const currentUserData = React.useContext(CurrentUserContext); //подписываемся на контекст\r\n\r\n  const [loader, setLoader] = React.useState(props.textOfButton); //начальное значение кнопки\r\n\r\n  const {values, errors, isValid, handleChange, setValues, setErrors, setValid} = useForm();\r\n\r\n  // После загрузки текущего пользователя из API его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setValid(false)\r\n    setValues({...values, name: currentUserData.name, about: currentUserData.about})\r\n    setErrors({})\r\n    setLoader(props.textOfButton);\r\n  }, [currentUserData, props.isOpen, props.textOfButton, setValues, setErrors, setValid]); \r\n\r\n  //функция обновления данных пользователя по сабмиту\r\n  function handleSubmit(evt) {\r\n    \r\n    evt.preventDefault();\r\n  \r\n    // Передаём значения имени и описания во внешний обработчик\r\n    props.onUpdateUser({\r\n      name: values.name,\r\n      about: values.about,\r\n    });\r\n\r\n    setLoader('Сохранение...');\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm name='edit' title='Редактировать профиль' textOfButton='Сохранить' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} button={loader} disabledButton={!isValid}>\r\n\r\n        <input className=\"form__item\" id=\"name-profile\" type=\"text\" name=\"name\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" value={values.name || ''} onChange={handleChange} required />\r\n        <span className=\"form__error\">{!isValid && errors.name}</span>\r\n        <input className=\"form__item\" id=\"desc-profile\" type=\"text\" name=\"about\" placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" value={values.about || ''} onChange={handleChange} required />\r\n        <span className=\"form__error\">{!isValid && errors.about}</span>\r\n\r\n      </PopupWithForm>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport {useForm} from '../hooks/useForm'\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n  const [loader, setLoader] = React.useState(props.textOfButton); //начальное значение кнопки\r\n\r\n  const {values, errors, isValid, handleChange, setValues, setErrors, setValid} = useForm();\r\n\r\n  //очищаем значение инпутов при монтировании\r\n  React.useEffect(() => {\r\n    setValid(false);\r\n    setValues({});\r\n    setErrors({});\r\n    setLoader(props.textOfButton);\r\n  }, [props.isOpen, props.textOfButton, setValues, setErrors, setValid]);\r\n\r\n  //обновляем аватар по сабмиту\r\n  function handleSubmit(evt) {\r\n    // отменяем действие браузера по умолчанию\r\n    evt.preventDefault();\r\n  \r\n    props.onUpdateAvatar({\r\n      avatar: values.avatar,\r\n    });\r\n\r\n    setLoader('Сохранение...');\r\n\r\n  } \r\n\r\n  return (\r\n    <>\r\n    <PopupWithForm name='edit-avatar' title='Обновить аватар' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} button={loader} disabledButton={!isValid}>\r\n\r\n      <input className=\"form__item\" id=\"avatar-link\" type=\"url\" name=\"avatar\" placeholder=\"Ссылка на фото профиля\" value={values.avatar || ''} onChange={handleChange} required />\r\n      <span className=\"form__error avatar-link-error\">{!isValid && errors.avatar}</span>\r\n\r\n    </PopupWithForm>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup\r\n","//класс запроса к серверу\r\nclass Api {\r\n  constructor({url, headers}) {\r\n    this._url = url; //ссылка сервера\r\n    this._headers = headers; //заголовок\r\n  }\r\n\r\n  //метод проверки результата запроса к серверу\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json(); //возвращаем резульат, если нет ошибок\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`); //возвращаем статус ошибки\r\n  };\r\n\r\n   //метод, получающий список всех карточек с сервера\r\n  getAllCards() {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //получаем данные пользователя\r\n  getUserInfo() {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод редактирования данных пользователя\r\n  setUserInfo(info) {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: info.name,\r\n        about: info.about,\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод редактирования фото профиля\r\n  setUserAvatar(user) {\r\n    return fetch(`${this._url}users/me/avatar/`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: user.avatar,\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод добавления новой карточки на страницу\r\n  addNewCard(newCard) {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: newCard.subtitle, //новое описание\r\n        link: newCard.link, //новая ссыока\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод постановки лайка и дизлайка\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    return fetch(`${this._url}cards/likes/${cardId}`, {\r\n      method: isLiked ? \"PUT\" : \"DELETE\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод удаления карточки со страницы\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._url}cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n}\r\n \r\nconst api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-30/',\r\n  headers: {\r\n    authorization: '3ace1836-34ae-4def-81c7-968efe5e4e17',\r\n    \"content-type\": \"application/json\",\r\n  }\r\n})\r\n\r\nexport default api","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction PopupConfirmation(props) {\r\n\r\n  const [loader, setLoader] = React.useState(props.textOfButton) //текст кнопки сабмита\r\n\r\n  React.useEffect(() => {\r\n    setLoader(props.textOfButton)\r\n  }, [props.isOpen, props.textOfButton])\r\n\r\n  //функция удаления карточки\r\n  function removeCard(evt) {\r\n    evt.preventDefault()\r\n    props.removeCard(props.card) //передаем текущую карточку в функцию удаления\r\n    setLoader('Удаление...')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm name=\"delete-confirmation\" title=\"Вы уверены?\" isOpen={props.isOpen} onClose={props.onClose} button={loader} onSubmit={removeCard} />\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default PopupConfirmation","import React from \"react\";\r\nimport {useForm} from \"../hooks/useForm\"\r\n\r\nfunction AuthForm(props) {\r\n\r\n  const {values, errors, isValid, handleChange} = useForm();\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    props.onSubmit(values.email, values.password);\r\n      \r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <form className='form form_color_white' name='sign-in' onSubmit={handleSubmit} noValidate >\r\n        <h2 className='form__title form__title_place_sign-in'>{props.title}</h2>\r\n        <div className=\"form__items form__items_color_white\">\r\n          <input className='form__item form__item_color_white' id='user-email' type='email' name='email' placeholder='Email' value={values.email || ''} onChange={handleChange} required />\r\n          <span className=\"form__error\">{!isValid && errors.email}</span>\r\n          <input className='form__item form__item_color_white' id='password' type='password' name='password' placeholder='Пароль' value={values.password || ''} onChange={handleChange} required />\r\n          <span className=\"form__error\">{!isValid && errors.password}</span>\r\n        </div>\r\n          <button className='form__button form__button_color_white' type='submit'>{props.textOfButton}</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AuthForm","import React from 'react';\r\nimport AuthForm from './AuthForm';\r\n\r\nfunction Login(props) {\r\n\r\n  return (\r\n    <section className='authorize'>\r\n      <AuthForm title={props.title} onSubmit={props.onLogin} textOfButton={props.textOfButton}/>\r\n    </section>\r\n      \r\n  )\r\n}\r\n\r\nexport default Login","import React from \"react\";\r\nimport {Link, useHistory } from 'react-router-dom'\r\nimport AuthForm from \"./AuthForm\";\r\n\r\nfunction Register(props) {\r\n\r\n  return (\r\n    <section className=\"authorize\">\r\n      <AuthForm title={props.title} onSubmit={props.onRegister} textOfButton={props.textOfButton}/>\r\n      <div className=\"authorize__container\">\r\n        <p className=\"authorize__text\">Уже зарегистрированы?</p>\r\n        <Link to=\"/sign-in\" className=\"authorize__link link\">Войти</Link>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Register","export default __webpack_public_path__ + \"static/media/icon-success.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/icon-error.d4ce2a26.svg\";","import React from \"react\";\r\nimport iconSuccess from '../images/icon-success.svg'\r\nimport iconError from '../images/icon-error.svg'\r\n\r\nfunction InfoToolTip(props) {\r\n  \r\n  return (\r\n    <>\r\n    <div className={`popup ${props.isOpen ? 'popup_opened' : '' }`} onMouseDown={props.onClose}>\r\n        <div className='popup__container' onMouseDown ={(evt) => evt.stopPropagation()}>\r\n          <button className='popup__close link' type='button' aria-label='Закрыть форму' onClick={props.onClose}></button>\r\n          <div className=\"popup__result result\">\r\n            <img className=\"result__image\" src={props.isSuccess ? iconSuccess : iconError} alt={props.isSuccess ? 'Успешный результат' : 'Отрицательный результат'}/>\r\n            <p className=\"result__text\">{props.isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}</p>\r\n          </div>         \r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InfoToolTip","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({component: Component, ...props}) => {\r\n\r\n  return (\r\n    <Route exact path={props.path}>\r\n      {() => \r\n        props.isLoggedIn ? <Component {...props}/> : <Redirect to='/sign-in'/>\r\n      }\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute","const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\n//класс запроса к серверу\r\nclass Api {\r\n  constructor({url, headers}) {\r\n    this._url = url; //ссылка сервера\r\n    this._headers = headers; //заголовок\r\n  }\r\n\r\n  //метод проверки результата запроса к серверу\r\n  _checkResponse(res) {\r\n    try {\r\n      if (res.status === 200 || res.status === 201){\r\n        return res.json();\r\n      }\r\n    } catch(error){\r\n      return (error)\r\n    }\r\n  }\r\n\r\n  //регистрация\r\n  register(email, password) {\r\n    return fetch(`${this._url}/signup`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({email, password})\r\n    })\r\n    .then(this._checkResponse)\r\n  };\r\n\r\n  //аутентификация\r\n  authorize(email, password) {\r\n    return fetch(`${this._url}/signin`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({email, password})\r\n    })\r\n    .then(this._checkResponse)\r\n  };\r\n\r\n  //проверка токена\r\n  getContent(token) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {...this.headers, 'Authorization': `Bearer ${token}`}\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n}\r\n\r\nconst auth = new Api({\r\n  url: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  }\r\n})\r\n\r\nexport default auth","import React from 'react';\r\nimport '../index.css';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport AddPlacePopup from './AddPlacePopup ';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport api from '../utils/api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport PopupConfirmation from './PopupConfirmation';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport InfoToolTip from './InfoTooltip';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport auth from '../utils/auth';\r\nimport {useScrollLock} from '../hooks/useScrollLock'\r\n\r\nfunction App() {\r\n\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false); //состояние попапа \"обновить аватар\"\r\n\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false); //состояние попапа \"редактировать профиль\"\r\n\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false); //состояние попапа \"добавить карточку\"\r\n\r\n  const [isPopupConfirmationOpen, setIsPopupConfirmationOpen] = React.useState(false); //состояние попапа \"подтвердить удаление карточки\"\r\n\r\n  const [selectedCard, setSelectedCard] = React.useState({}) //состояние попапа с изображением\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({}); //стейт текущих данных пользователя\r\n\r\n  const [cards, setCards] = React.useState([]);//хук состояния карточки \r\n\r\n  const [isLoggedIn, setLoggedIn] = React.useState(false); //стейт, содержащий инф-ию о статусе пользователя\r\n\r\n  const [email, setEmail] = React.useState(''); //стейт, эл. почты пользователя\r\n\r\n  const [isInfoToolTipOpen, setInfoToolTipOpen] = React.useState(false); //состояние попапа результата регистрации\r\n\r\n  const [isSuccess, setSuccess] = React.useState(false); //состояние переменной об успешной/неуспешной регистрации\r\n\r\n  const [isMenuOpen, setMenuOpen] = React.useState(false); //состояние переменной открытия меню\r\n\r\n  const {lockScroll, unlockScroll} = useScrollLock(); //скролл и отмена скролла \r\n\r\n  const history = useHistory();\r\n  \r\n  //обработчик открытия попапа редактирования аватара профиля\r\n  function handleEditAvatarClick() {\r\n    lockScroll()\r\n    setIsEditAvatarPopupOpen(true)\r\n  }\r\n\r\n  //обработчик открытия попапа редактирования профиля\r\n  function handleEditProfileClick() {\r\n    lockScroll()\r\n    setIsEditProfilePopupOpen(true)\r\n  }\r\n\r\n  //обработчик открытия попапа добавления новой карточки\r\n  function handleAddPlaceClick() {\r\n    lockScroll()\r\n    setIsAddPlacePopupOpen(true)\r\n  }\r\n  \r\n  //обработчик клика по карточке\r\n  function handleCardClick(card) {\r\n    lockScroll()\r\n    setSelectedCard(card)\r\n  }\r\n\r\n  //обработчик открытия попапа подтверждения удаления карточки\r\n  function handlePopupConfirmationClick() {\r\n    lockScroll()\r\n    setIsPopupConfirmationOpen(true)\r\n  }\r\n\r\n  //обработчик статуса пользователя\r\n  function handleLogin() {\r\n    setLoggedIn(true)\r\n  }\r\n\r\n  //обработчик эл. почты пользователя\r\n  function handleUserEmail(userEmail) {\r\n    setEmail(userEmail)\r\n  }\r\n\r\n  function handleMenuClick() {\r\n    setMenuOpen(!isMenuOpen)\r\n  }\r\n\r\n  //сброс состояний переменных\r\n  function closeAllPopups() {\r\n    setInfoToolTipOpen(false)\r\n    setIsEditAvatarPopupOpen(false)\r\n    setIsEditProfilePopupOpen(false)\r\n    setIsAddPlacePopupOpen(false)\r\n    setSelectedCard({})\r\n    setIsPopupConfirmationOpen(false)\r\n    unlockScroll()\r\n    setMenuOpen(false)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // Отправляем запрос в API и получаем первоначальный массив карточек\r\n    api.getAllCards()\r\n    .then((cardData) => {\r\n      setCards(cardData)\r\n    })\r\n    .catch(err => console.log(err))\r\n\r\n    //Отправляем запрос в API и получаем обновлённые данные пользователя\r\n    api.getUserInfo()\r\n    .then((userData) => {\r\n      setCurrentUser(userData); //обновили данные текущего пользователя\r\n    })\r\n    .catch(err => console.log(err))\r\n\r\n    tokenCheck();//проверка токена\r\n    \r\n  }, [])\r\n\r\n  //проверка токена пользователя\r\n  function tokenCheck() {\r\n    const token = localStorage.getItem('token'); //сохранили токен\r\n    if(token){\r\n      auth.getContent(token)\r\n        .then((data) => data)\r\n        .then((res) => {\r\n          handleUserEmail(res.data.email); //обновили стейт эл. почты пользователя\r\n          handleLogin(); //обновлен статус пользователя - зарегистрирован\r\n          history.push('/'); //переадресация на страницу пользователя\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  }\r\n\r\n  //обработчик модального окна успешной/неуспешной регистрации\r\n  function handleInfoTooltipClick() {\r\n    setInfoToolTipOpen(true);\r\n  }\r\n\r\n  //обновление данных пользователя(имя, описание)\r\n  function handleUpdateUser(data) {\r\n    // Отправляем запрос в API и получаем отредактированные данные пользователя\r\n    api.setUserInfo(data)\r\n    .then((userData) => {\r\n      setCurrentUser(userData);\r\n      closeAllPopups();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  //обновление аватара пользователя\r\n  function handleUpdateAvatar(data) {\r\n    // Отправляем запрос в API и получаем обновленный аватар пользователя\r\n    api.setUserAvatar(data)\r\n    .then((userData) => {\r\n      setCurrentUser(userData); //обновили ccылку на аватар пользователя\r\n      closeAllPopups();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  //функция постановки лайка/дизлайк\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(element => element._id === currentUser._id); // проверяем, поставлен ли лайк пользователем на карточке\r\n    \r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, !isLiked)\r\n    .then((newCard) => {\r\n      setCards((state) => state.map((element) => element._id === card._id ? newCard : element));\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n  \r\n  //функция удаления карточки\r\n  function handleCardDelete(card) {\r\n    // Отправляем запрос в API и получаем обновлённые массив карточек\r\n    api.deleteCard(card._id)\r\n    .then(() => {\r\n      setCards((state) => state.filter(element => element._id !== card._id)) //отфильтровали карточки по которым айди не совпали при клике на удаление\r\n      closeAllPopups()\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  //функция добавления карточки\r\n  function handleAddPlaceSubmit(card) {\r\n    // Отправляем запрос в API и получаем обновлённый массив карточек\r\n    api.addNewCard(card)\r\n    .then((newAddPlace) => {\r\n      setCards([newAddPlace, ...cards]); //обновили стейт карточек\r\n      closeAllPopups();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  //функция перехода на страницу пользователя\r\n  function onLogin(userEmail, userPassword) {\r\n\r\n    auth.authorize(userEmail, userPassword)\r\n      .then((data) => {\r\n        if(data.token) {\r\n          handleUserEmail(userEmail); //сохранили эл. почту пользователя в стейт\r\n          localStorage.setItem('token', data.token);//сохранили токен\r\n          handleLogin();//статус пользователя - зарегистрирован\r\n          history.push('/'); //переадресация на основную страницу\r\n        } else {\r\n          return\r\n        }\r\n      })\r\n      .catch(() => {\r\n        handleInfoTooltipClick(); //открытие модального окна с ошибкой\r\n        setSuccess(false);\r\n      })\r\n  }\r\n\r\n  function onRegister(userEmail, userPassword) {\r\n    \r\n    auth.register(userEmail, userPassword)\r\n      .then((res) => {\r\n        if(res) {\r\n          handleInfoTooltipClick(); //открытие модального окна\r\n          setSuccess(true); //сообщение об успешной регистраци\r\n          history.push('/sign-in');\r\n        } else {\r\n          handleInfoTooltipClick(); //открытие модального окна\r\n          setSuccess(false); //сообщение о проблеме при регистраци\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n  }\r\n  \r\n  //функция выхода из системы\r\n  function signOutClick(){\r\n    localStorage.removeItem('token'); //удалили токен\r\n    setLoggedIn(false); // обновили статус пользователя\r\n    history.push('/sign-in');//переадресация на странцицу входа\r\n  }\r\n\r\n  return (\r\n    <div className='page__content'>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n\r\n      <Header isLoggedIn={isLoggedIn} useremail={email} signOutClick={signOutClick} handleMenuClick={handleMenuClick} closeAllPopups={closeAllPopups} isMenuOpen={isMenuOpen} />\r\n      \r\n        <Switch>\r\n\r\n          <ProtectedRoute\r\n            exact path='/'\r\n            isLoggedIn={isLoggedIn}\r\n            component={() => <Main \r\n              onEditAvatar={handleEditAvatarClick}\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onCardClick={handleCardClick}\r\n              cards={cards}\r\n              onCardLike={handleCardLike}\r\n              onBtnDelete={handlePopupConfirmationClick}\r\n            />}\r\n          />\r\n\r\n          <ProtectedRoute\r\n            exact path='/'\r\n            isLoggedIn={isLoggedIn}\r\n            component={Footer}\r\n          />\r\n\r\n          <Route path='/sign-up'>\r\n            <Register title='Регистрация' textOfButton='Зарегистрироваться' onRegister={onRegister}/>          \r\n          </Route>\r\n\r\n          <Route path='/sign-in'>\r\n            <Login title='Войти' textOfButton='Войти' onLogin={onLogin} />\r\n          </Route>\r\n\r\n        </Switch>\r\n\r\n        <InfoToolTip isOpen={isInfoToolTipOpen} onClose={closeAllPopups} isSuccess={isSuccess}/>\r\n\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} textOfButton='Сохранить'/>\r\n\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} textOfButton='Создать'/>\r\n\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} textOfButton='Сохранить' />\r\n\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\r\n\r\n        <PopupConfirmation isOpen={isPopupConfirmationOpen} onClose={closeAllPopups} card={selectedCard} textOfButton=\"Да\" removeCard={handleCardDelete}/>\r\n\r\n      </CurrentUserContext.Provider>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nexport function useScrollLock() {\r\n  const lockScroll = React.useCallback(() => {\r\n\r\n    const scrollBarCompensation = window.innerWidth - document.body.offsetWidth; //ширина скролла \r\n    document.body.style.overflow = 'hidden';\r\n    document.body.style.paddingRight = `${scrollBarCompensation}px`;\r\n  }, [])\r\n\r\n  const unlockScroll = React.useCallback(() => {\r\n    document.body.style.overflow = '';\r\n    document.body.style.paddingRight = '';\r\n  }, [])\r\n\r\n  return {\r\n    lockScroll,\r\n    unlockScroll\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App /> \r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}