{"version":3,"sources":["images/logo.svg","components/HamburgerButton.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","hooks/useForm.js","components/PopupWithForm.js","components/AddPlacePopup .js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","utils/api.js","components/PopupConfirmation.js","components/AuthForm.js","components/Login.js","components/Register.js","images/icon-success.svg","images/icon-error.svg","components/InfoTooltip.js","components/ProtectedRoute.js","utils/auth.js","components/App.js","hooks/useScrollLock.js","index.js"],"names":["HamburgerButton","props","className","onClick","handleMenuClick","isMenuOpen","Header","location","useLocation","link","pathname","textLink","classLink","isLoggedIn","signOut","signOutClick","useremail","to","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","currentUserData","useContext","isOwner","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onBtnDelete","onCardClick","name","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","Footer","currentYear","Date","getFullYear","useForm","useState","values","setValues","errors","setErrors","isValid","setValid","handleChange","evt","target","value","validationMessage","closest","checkValidity","PopupWithForm","isOpen","onMouseDown","onClose","stopPropagation","onSubmit","noValidate","title","children","disabledButton","disabled","button","AddPlacePopup","textOfButton","loader","setLoader","useEffect","preventDefault","subtitle","id","placeholder","minLength","maxLength","onChange","required","ImagePopup","EditProfilePopup","onUpdateUser","EditAvatarPopup","onUpdateAvatar","api","url","headers","this","_url","_headers","res","ok","json","Promise","reject","status","fetch","method","then","_checkResponse","info","body","JSON","stringify","user","newCard","cardId","authorization","PopupConfirmation","removeCard","AuthForm","email","password","Login","onLogin","Register","onRegister","InfoToolTip","isSuccess","iconSuccess","iconError","ProtectedRoute","Component","component","exact","path","auth","error","token","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isPopupConfirmationOpen","setIsPopupConfirmationOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","setCards","setLoggedIn","setEmail","isInfoToolTipOpen","setInfoToolTipOpen","setSuccess","setMenuOpen","lockScroll","useCallback","scrollBarCompensation","window","innerWidth","document","offsetWidth","style","overflow","paddingRight","unlockScroll","history","useHistory","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handlePopupConfirmationClick","handleLogin","handleUserEmail","userEmail","closeAllPopups","handleInfoTooltipClick","handleCardLike","element","changeLikeCardStatus","state","catch","err","console","log","getAllCards","cardData","getUserInfo","userData","localStorage","getItem","getContent","data","push","tokenCheck","Provider","removeItem","userPassword","register","authorize","setItem","setUserInfo","addNewCard","newAddPlace","setUserAvatar","deleteCard","filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"wMAAe,G,MAAA,IAA0B,kC,cCY1BA,MAVf,SAAyBC,GACvB,OACE,sBAAKC,UAAU,cAAcC,QAASF,EAAMG,gBAA5C,UACE,sBAAMF,UAAS,uBAAkBD,EAAMI,WAAa,oBAAsB,MAC1E,sBAAMH,UAAS,uBAAkBD,EAAMI,WAAa,sBAAwB,MAC5E,sBAAMH,UAAS,uBAAkBD,EAAMI,WAAa,qBAAuB,UCuClEC,MAzCf,SAAgBL,GAEd,IAAMM,EAAWC,cAEXC,EAA8B,MAAtBF,EAASG,UAA0C,aAAtBH,EAASG,SAA2B,WAAa,WACtFC,EAAkC,MAAtBJ,EAASG,SAAoB,iCAAiC,aAAtBH,EAASG,SAA2B,iCAAU,qEAClGE,EAAS,iCAA8BX,EAAMY,WAAa,+BAAiC,IAGjG,SAASC,IACPb,EAAMc,eAGR,OACE,qCAEKd,EAAMY,YAAcZ,EAAMI,YAEzB,sBAAKH,UAAU,uDAAf,UACGD,EAAMY,WAAc,mBAAGX,UAAU,eAAb,SAA6BD,EAAMe,YAAkB,GAC1E,cAAC,IAAD,CAAMC,GAAIR,EAAMP,UAAWU,EAAWT,QAASW,EAA/C,SAAyDH,OAI7D,yBAAQT,UAAU,sBAAlB,UACE,cAAC,IAAD,CAAMA,UAAU,YAAYe,GAAG,IAA/B,SACE,qBAAKf,UAAU,eAAegB,IAAKC,EAAYC,IAAI,iDAGrD,sBAAKlB,UAAU,wDAAf,UACGD,EAAMY,WAAc,mBAAGX,UAAU,eAAb,SAA6BD,EAAMe,YAAkB,GAC1E,cAAC,IAAD,CAAMC,GAAIR,EAAMP,UAAWU,EAAWT,QAASW,EAA/C,SAAyDH,OAG1DV,EAAMY,YAAc,cAAC,EAAD,CAAiBT,gBAAiBH,EAAMG,gBAAiBC,WAAYJ,EAAMI,oBCrC7FgB,EAAqBC,IAAMC,gBCkDzBC,MAjDf,SAAcvB,GAsBZ,IAAMwB,EAAkBH,IAAMI,WAAWL,GAEnCM,EAAU1B,EAAM2B,KAAKC,MAAMC,MAAQL,EAAgBK,IAEnDC,EAAyB,wBAAqBJ,EAAU,wBAA0B,IAElFK,EAAU/B,EAAM2B,KAAKK,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQL,EAAgBK,OAE/DM,EAAuB,wBAAqBJ,EAAU,uBAAyB,IAErF,OACE,mCACE,qBAAI9B,UAAU,cAAd,UACE,wBAAQA,UAAW6B,EAA2BM,KAAK,SAAS,aAAW,6CAAUlC,QArBvF,WACEF,EAAMqC,cAENrC,EAAMsC,YAAY,CAChBT,IAAK7B,EAAM2B,KAAKE,SAkBd,qBAAK5B,UAAU,eAAegB,IAAG,UAAKjB,EAAM2B,KAAKnB,MAAQW,IAAG,UAAKnB,EAAM2B,KAAKY,MAAQrC,QAjC1F,WACEF,EAAMsC,YAAY,CAChBC,KAAMvC,EAAM2B,KAAKY,KACjB/B,KAAMR,EAAM2B,KAAKnB,UA+Bf,sBAAKP,UAAU,cAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCD,EAAM2B,KAAKY,OAC5C,sBAAKtC,UAAU,yBAAf,UACE,wBAAQA,UAAWkC,EAAyBC,KAAK,SAAS,aAAW,2BAAOlC,QA9BtF,WACEF,EAAMwC,WAAWxC,EAAM2B,SA8Bf,mBAAG1B,UAAU,mBAAb,SAAiCD,EAAM2B,KAAKK,MAAMS,qBCL/CC,MAnCf,SAAc1C,GAEZ,IAAMwB,EAAkBH,IAAMI,WAAWL,GAEzC,OACE,mCACE,uBAAMnB,UAAU,wBAAhB,UACE,0BAASA,UAAU,wBAAnB,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,sBAAsBC,QAASF,EAAM2C,aAAvD,SACE,qBAAK1C,UAAU,iBAAiBgB,IAAKO,EAAgBoB,OAAQzB,IAAI,wGAEnE,sBAAKlB,UAAU,gBAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BuB,EAAgBe,OAC/C,wBAAQtC,UAAU,qBAAqBmC,KAAK,SAAS,aAAW,iKAA+BlC,QAASF,EAAM6C,gBAC9G,mBAAG5C,UAAU,gBAAb,SAA8BuB,EAAgBsB,cAGlD,wBAAQ7C,UAAU,uBAAuBmC,KAAK,SAAS,aAAW,mIAA0BlC,QAASF,EAAM+C,gBAG3G,yBAAS9C,UAAU,oBAAoB,aAAW,yIAAlD,SACE,oBAAIA,UAAU,cAAd,SAEGD,EAAMgD,MAAMC,KAAI,SAACtB,GAAD,OACf,cAAC,EAAD,CAAMA,KAAMA,EAAqBW,YAAatC,EAAMsC,YAAaE,WAAYxC,EAAMwC,WAAYH,YAAarC,EAAMqC,aAA3FV,EAAKE,kBCd7BqB,MAbf,WAEE,IAAMC,GAAc,IAAIC,MAAOC,cAE/B,OACE,mCACE,wBAAQpD,UAAU,uBAAlB,SACE,oBAAGA,UAAU,iBAAb,kBAAsCkD,EAAtC,wB,eCPD,SAASG,IAEd,MAA4BjC,IAAMkC,SAAS,IAA3C,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAA4BpC,IAAMkC,SAAS,IAA3C,mBAAOG,EAAP,KAAeC,EAAf,KAEA,EAA4BtC,IAAMkC,UAAS,GAA3C,mBAAOK,EAAP,KAAgBC,EAAhB,KAuBA,MAAO,CACLL,SACAE,SACAE,UACAH,YACAE,YACAE,WACAC,aA3BF,SAAsBC,GAEpB,IAAIxB,EAAOwB,EAAIC,OAAOzB,KAClB0B,EAAQF,EAAIC,OAAOC,MAGvBR,EAAU,2BACLD,GADI,kBAENjB,EAAQ0B,KAIXN,EAAU,2BACLD,GADI,kBAENK,EAAIC,OAAOzB,KAAOwB,EAAIC,OAAOE,qBAGhCL,EAASE,EAAIC,OAAOG,QAAQ,SAASC,mBCN1BC,MApBf,SAAuBrE,GAEtB,OACG,mCACE,qBAAKC,UAAS,2BAAsBD,EAAMuC,KAA5B,YAAoCvC,EAAMsE,OAAS,eAAiB,IAAOC,YAAcvE,EAAMwE,QAA7G,SACE,sBAAKvE,UAAU,mBAAmBsE,YAAc,SAACR,GAAD,OAASA,EAAIU,mBAA7D,UACE,wBAAQxE,UAAU,oBAAoBmC,KAAK,SAAS,aAAW,4EAAgBlC,QAASF,EAAMwE,UAC9F,uBAAMvE,UAAS,qCAAgCD,EAAMuC,MAAQA,KAAI,eAAUvC,EAAMuC,MAAQmC,SAAU1E,EAAM0E,SAAUC,YAAU,EAA7H,UACE,oBAAI1E,UAAU,cAAd,mBAAgCD,EAAM4E,SACtC,qBAAK3E,UAAU,cAAf,SACGD,EAAM6E,WAET,wBAAQ5E,UAAS,uBAAkBD,EAAM8E,eAAiB,wBAA0B,IAAM1C,KAAK,SAAS2C,SAAU/E,EAAM8E,eAAxH,SAAyI9E,EAAMgF,oBCgC5IC,MA1Cf,SAAuBjF,GAErB,MAA4BqB,IAAMkC,SAASvD,EAAMkF,cAAjD,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAAgF9B,IAAzEE,EAAP,EAAOA,OAAQE,EAAf,EAAeA,OAAQE,EAAvB,EAAuBA,QAASE,EAAhC,EAAgCA,aAAcL,EAA9C,EAA8CA,UAAWE,EAAzD,EAAyDA,UAAWE,EAApE,EAAoEA,SAwBpE,OArBAxC,IAAMgE,WAAU,WACdxB,GAAS,GACTJ,EAAU,IACVE,EAAU,IACVyB,EAAUpF,EAAMkF,gBACf,CAAClF,EAAMsE,OAAQtE,EAAMkF,aAAczB,EAAWE,EAAWE,IAiB1D,mCACE,eAAC,EAAD,CAAetB,KAAK,WAAWqC,MAAM,gEAAcM,aAAa,6CAAUZ,OAAQtE,EAAMsE,OAAQE,QAASxE,EAAMwE,QAASE,SAf5H,SAAsBX,GACpBA,EAAIuB,iBAGJtF,EAAM+C,WAAW,CACfwC,SAAU/B,EAAO+B,SACjB/E,KAAMgD,EAAOhD,OAGf4E,EAAU,wDAMwIJ,OAAQG,EAAQL,gBAAiBlB,EAAjL,UAEE,uBAAO3D,UAAU,aAAauF,GAAG,iBAAiBpD,KAAK,OAAOG,KAAK,WAAWkD,YAAY,mDAAWC,UAAU,IAAIC,UAAU,KAAK1B,MAAOT,EAAO+B,UAAY,GAAIK,SAAU9B,EAAc+B,UAAQ,IAChM,sBAAM5F,UAAU,mCAAhB,UAAqD2D,GAAWF,EAAO6B,WACvE,uBAAOtF,UAAU,aAAauF,GAAG,aAAapD,KAAK,MAAMG,KAAK,OAAOkD,YAAY,qGAAqBxB,MAAOT,EAAOhD,MAAQ,GAAIoF,SAAU9B,EAAc+B,UAAQ,IAChK,sBAAM5F,UAAU,+BAAhB,UAAiD2D,GAAWF,EAAOlD,aCtB5DsF,MAff,SAAoB9F,GAElB,OACE,mCACE,qBAAKC,UAAS,iCAA4BD,EAAM2B,KAAKnB,MAAQ,gBAAkBN,QAASF,EAAMwE,QAA9F,SACE,sBAAKvE,UAAU,gDAAgDC,QAAS,SAAC6D,GAAD,OAASA,EAAIU,mBAArF,UACE,wBAAQxE,UAAU,oBAAoBmC,KAAK,SAAS,aAAW,6CAAUlC,QAASF,EAAMwE,UACxF,qBAAKvE,UAAU,eAAegB,IAAKjB,EAAM2B,KAAKnB,KAAMW,IAAKnB,EAAM2B,KAAKY,OACpE,oBAAItC,UAAU,kBAAd,SAAiCD,EAAM2B,KAAKY,eCwCvCwD,MA7Cf,SAA0B/F,GAExB,IAAMwB,EAAkBH,IAAMI,WAAWL,GAEzC,EAA4BC,IAAMkC,SAASvD,EAAMkF,cAAjD,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAAgF9B,IAAzEE,EAAP,EAAOA,OAAQE,EAAf,EAAeA,OAAQE,EAAvB,EAAuBA,QAASE,EAAhC,EAAgCA,aAAcL,EAA9C,EAA8CA,UAAWE,EAAzD,EAAyDA,UAAWE,EAApE,EAAoEA,SAyBpE,OAtBAxC,IAAMgE,WAAU,WACdxB,GAAS,GACTJ,EAAU,2BAAID,GAAL,IAAajB,KAAMf,EAAgBe,KAAMO,MAAOtB,EAAgBsB,SACzEa,EAAU,IACVyB,EAAUpF,EAAMkF,gBACf,CAAC1D,EAAiBxB,EAAMsE,OAAQtE,EAAMkF,aAAczB,EAAWE,EAAWE,IAkB3E,mCACE,eAAC,EAAD,CAAetB,KAAK,OAAOqC,MAAM,4HAAwBM,aAAa,yDAAYZ,OAAQtE,EAAMsE,OAAQE,QAASxE,EAAMwE,QAASE,SAhBpI,SAAsBX,GAEpBA,EAAIuB,iBAGJtF,EAAMgG,aAAa,CACjBzD,KAAMiB,EAAOjB,KACbO,MAAOU,EAAOV,QAGhBsC,EAAU,oEAMgJJ,OAAQG,EAAQL,gBAAiBlB,EAAzL,UAEE,uBAAO3D,UAAU,aAAauF,GAAG,eAAepD,KAAK,OAAOG,KAAK,OAAOkD,YAAY,qBAAMC,UAAU,IAAIC,UAAU,KAAK1B,MAAOT,EAAOjB,MAAQ,GAAIqD,SAAU9B,EAAc+B,UAAQ,IACjL,sBAAM5F,UAAU,cAAhB,UAAgC2D,GAAWF,EAAOnB,OAClD,uBAAOtC,UAAU,aAAauF,GAAG,eAAepD,KAAK,OAAOG,KAAK,QAAQkD,YAAY,kCAASC,UAAU,IAAIC,UAAU,MAAM1B,MAAOT,EAAOV,OAAS,GAAI8C,SAAU9B,EAAc+B,UAAQ,IACvL,sBAAM5F,UAAU,cAAhB,UAAgC2D,GAAWF,EAAOZ,cCA3CmD,MAvCf,SAAyBjG,GAEvB,MAA4BqB,IAAMkC,SAASvD,EAAMkF,cAAjD,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAAgF9B,IAAzEE,EAAP,EAAOA,OAAQE,EAAf,EAAeA,OAAQE,EAAvB,EAAuBA,QAASE,EAAhC,EAAgCA,aAAcL,EAA9C,EAA8CA,UAAWE,EAAzD,EAAyDA,UAAWE,EAApE,EAAoEA,SAuBpE,OApBAxC,IAAMgE,WAAU,WACdxB,GAAS,GACTJ,EAAU,IACVE,EAAU,IACVyB,EAAUpF,EAAMkF,gBACf,CAAClF,EAAMsE,OAAQtE,EAAMkF,aAAczB,EAAWE,EAAWE,IAgB1D,mCACA,eAAC,EAAD,CAAetB,KAAK,cAAcqC,MAAM,wFAAkBN,OAAQtE,EAAMsE,OAAQE,QAASxE,EAAMwE,QAASE,SAd1G,SAAsBX,GAEpBA,EAAIuB,iBAEJtF,EAAMkG,eAAe,CACnBtD,OAAQY,EAAOZ,SAGjBwC,EAAU,oEAMsHJ,OAAQG,EAAQL,gBAAiBlB,EAAjK,UAEE,uBAAO3D,UAAU,aAAauF,GAAG,cAAcpD,KAAK,MAAMG,KAAK,SAASkD,YAAY,wHAAyBxB,MAAOT,EAAOZ,QAAU,GAAIgD,SAAU9B,EAAc+B,UAAQ,IACzK,sBAAM5F,UAAU,gCAAhB,UAAkD2D,GAAWF,EAAOd,e,gBC+D3DuD,EARH,I,WAzFV,cAA6B,IAAhBC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,QAAU,oBAC1BC,KAAKC,KAAOH,EACZE,KAAKE,SAAWH,E,kDAIlB,SAAeI,GACb,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,W,yBAIvC,WACE,OAAOC,MAAM,GAAD,OAAIT,KAAKC,KAAT,SAAsB,CAChCS,OAAQ,MACRX,QAASC,KAAKE,WAEfS,KAAKX,KAAKY,kB,yBAIb,WACE,OAAOH,MAAM,GAAD,OAAIT,KAAKC,KAAT,YAAyB,CACnCS,OAAQ,MACRX,QAASC,KAAKE,WAEfS,KAAKX,KAAKY,kB,yBAIb,SAAYC,GACV,OAAOJ,MAAM,GAAD,OAAIT,KAAKC,KAAT,YAAyB,CACnCS,OAAQ,QACRX,QAASC,KAAKE,SACdY,KAAMC,KAAKC,UAAU,CACnB/E,KAAM4E,EAAK5E,KACXO,MAAOqE,EAAKrE,UAGfmE,KAAKX,KAAKY,kB,2BAIb,SAAcK,GACZ,OAAOR,MAAM,GAAD,OAAIT,KAAKC,KAAT,oBAAiC,CAC3CS,OAAQ,QACRX,QAASC,KAAKE,SACdY,KAAMC,KAAKC,UAAU,CACnB1E,OAAQ2E,EAAK3E,WAGhBqE,KAAKX,KAAKY,kB,wBAIb,SAAWM,GACT,OAAOT,MAAM,GAAD,OAAIT,KAAKC,KAAT,SAAsB,CAChCS,OAAQ,OACRX,QAASC,KAAKE,SACdY,KAAMC,KAAKC,UAAU,CACnB/E,KAAMiF,EAAQjC,SACd/E,KAAMgH,EAAQhH,SAGjByG,KAAKX,KAAKY,kB,kCAIb,SAAqBO,EAAQ1F,GAC3B,OAAOgF,MAAM,GAAD,OAAIT,KAAKC,KAAT,uBAA4BkB,GAAU,CAChDT,OAAQjF,EAAU,MAAQ,SAC1BsE,QAASC,KAAKE,WAEfS,KAAKX,KAAKY,kB,wBAIb,SAAWO,GACT,OAAOV,MAAM,GAAD,OAAIT,KAAKC,KAAT,iBAAsBkB,GAAU,CAC1CT,OAAQ,SACRX,QAASC,KAAKE,WAEfS,KAAKX,KAAKY,oB,KAKH,CAAQ,CAClBd,IAAK,+CACLC,QAAS,CACPqB,cAAe,uCACf,eAAgB,sBCrELC,MAvBf,SAA2B3H,GAEzB,MAA4BqB,IAAMkC,SAASvD,EAAMkF,cAAjD,mBAAOC,EAAP,KAAeC,EAAf,KAaA,OAXA/D,IAAMgE,WAAU,WACdD,EAAUpF,EAAMkF,gBACf,CAAClF,EAAMsE,OAAQtE,EAAMkF,eAUtB,mCACE,cAAC,EAAD,CAAe3C,KAAK,sBAAsBqC,MAAM,2DAAcN,OAAQtE,EAAMsE,OAAQE,QAASxE,EAAMwE,QAASQ,OAAQG,EAAQT,SARhI,SAAoBX,GAClBA,EAAIuB,iBACJtF,EAAM4H,WAAW5H,EAAM2B,MACvByD,EAAU,6DCeCyC,MA3Bf,SAAkB7H,GAEhB,MAAgDsD,IAAzCE,EAAP,EAAOA,OAAQE,EAAf,EAAeA,OAAQE,EAAvB,EAAuBA,QAASE,EAAhC,EAAgCA,aAShC,OACE,mCACE,uBAAM7D,UAAU,wBAAwBsC,KAAK,UAAUmC,SAT3D,SAAsBX,GACpBA,EAAIuB,iBAEJtF,EAAM0E,SAASlB,EAAOsE,MAAOtE,EAAOuE,WAM6CpD,YAAU,EAAzF,UACE,oBAAI1E,UAAU,wCAAd,SAAuDD,EAAM4E,QAC7D,sBAAK3E,UAAU,sCAAf,UACE,uBAAOA,UAAU,oCAAoCuF,GAAG,aAAapD,KAAK,QAAQG,KAAK,QAAQkD,YAAY,QAAQxB,MAAOT,EAAOsE,OAAS,GAAIlC,SAAU9B,EAAc+B,UAAQ,IAC9K,sBAAM5F,UAAU,cAAhB,UAAgC2D,GAAWF,EAAOoE,QAClD,uBAAO7H,UAAU,oCAAoCuF,GAAG,WAAWpD,KAAK,WAAWG,KAAK,WAAWkD,YAAY,uCAASxB,MAAOT,EAAOuE,UAAY,GAAInC,SAAU9B,EAAc+B,UAAQ,IACtL,sBAAM5F,UAAU,cAAhB,UAAgC2D,GAAWF,EAAOqE,cAElD,wBAAQ9H,UAAU,wCAAwCmC,KAAK,SAA/D,SAAyEpC,EAAMkF,qBCX1E8C,MAVf,SAAehI,GAEb,OACE,yBAASC,UAAU,YAAnB,SACE,cAAC,EAAD,CAAU2E,MAAO5E,EAAM4E,MAAOF,SAAU1E,EAAMiI,QAAS/C,aAAclF,EAAMkF,kBCUlEgD,MAbf,SAAkBlI,GAEhB,OACE,0BAASC,UAAU,YAAnB,UACE,cAAC,EAAD,CAAU2E,MAAO5E,EAAM4E,MAAOF,SAAU1E,EAAMmI,WAAYjD,aAAclF,EAAMkF,eAC9E,sBAAKjF,UAAU,uBAAf,UACE,mBAAGA,UAAU,kBAAb,kIACA,cAAC,IAAD,CAAMe,GAAG,WAAWf,UAAU,uBAA9B,mDCXO,MAA0B,yCCA1B,MAA0B,uCCqB1BmI,MAjBf,SAAqBpI,GAEnB,OACE,mCACA,qBAAKC,UAAS,gBAAWD,EAAMsE,OAAS,eAAiB,IAAOC,YAAavE,EAAMwE,QAAnF,SACI,sBAAKvE,UAAU,mBAAmBsE,YAAc,SAACR,GAAD,OAASA,EAAIU,mBAA7D,UACE,wBAAQxE,UAAU,oBAAoBmC,KAAK,SAAS,aAAW,4EAAgBlC,QAASF,EAAMwE,UAC9F,sBAAKvE,UAAU,uBAAf,UACE,qBAAKA,UAAU,gBAAgBgB,IAAKjB,EAAMqI,UAAYC,EAAcC,EAAWpH,IAAKnB,EAAMqI,UAAY,0GAAuB,0IAC7H,mBAAGpI,UAAU,eAAb,SAA6BD,EAAMqI,UAAY,wKAAmC,mN,wBCC/EG,EAXQ,SAAC,GAAsC,IAA1BC,EAAyB,EAApCC,UAAyB1I,EAAW,iBAE3D,OACE,cAAC,IAAD,CAAO2I,OAAK,EAACC,KAAM5I,EAAM4I,KAAzB,SACG,kBACC5I,EAAMY,WAAa,cAAC6H,EAAD,eAAezI,IAAW,cAAC,IAAD,CAAUgB,GAAG,iBCkDnD6H,EAPF,I,WA/CX,cAA6B,IAAhBzC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,QAAU,oBAC1BC,KAAKC,KAAOH,EACZE,KAAKE,SAAWH,E,kDAIlB,SAAeI,GACb,IACE,GAAmB,MAAfA,EAAIK,QAAiC,MAAfL,EAAIK,OAC5B,OAAOL,EAAIE,OAEb,MAAMmC,GACN,OAAQA,K,sBAKZ,SAAShB,EAAOC,GACd,OAAOhB,MAAM,GAAD,OAAIT,KAAKC,KAAT,WAAwB,CAClCS,OAAQ,OACRX,QAASC,KAAKE,SACdY,KAAMC,KAAKC,UAAU,CAACQ,QAAOC,eAE9Bd,KAAKX,KAAKY,kB,uBAIb,SAAUY,EAAOC,GACf,OAAOhB,MAAM,GAAD,OAAIT,KAAKC,KAAT,WAAwB,CAClCS,OAAQ,OACRX,QAASC,KAAKE,SACdY,KAAMC,KAAKC,UAAU,CAACQ,QAAOC,eAE9Bd,KAAKX,KAAKY,kB,wBAIb,SAAW6B,GACT,OAAOhC,MAAM,GAAD,OAAIT,KAAKC,KAAT,aAA0B,CACpCS,OAAQ,MACRX,QAAQ,2BAAKC,KAAKD,SAAX,IAAoB,cAAgB,UAAhB,OAA2B0C,OAEvD9B,KAAKX,KAAKY,oB,KAKF,CAAQ,CACnBd,IApDe,gCAqDfC,QAAS,CACP,eAAgB,sBCsPL2C,MAxRf,WAEE,MAA0D3H,IAAMkC,UAAS,GAAzE,mBAAO0F,EAAP,KAA8BC,EAA9B,KAEA,EAA4D7H,IAAMkC,UAAS,GAA3E,mBAAO4F,EAAP,KAA+BC,EAA/B,KAEA,EAAsD/H,IAAMkC,UAAS,GAArE,mBAAO8F,EAAP,KAA4BC,EAA5B,KAEA,EAA8DjI,IAAMkC,UAAS,GAA7E,mBAAOgG,EAAP,KAAgCC,EAAhC,KAEA,EAAwCnI,IAAMkC,SAAS,IAAvD,mBAAOkG,EAAP,KAAqBC,EAArB,KAEA,EAAsCrI,IAAMkC,SAAS,IAArD,mBAAOoG,EAAP,KAAoBC,EAApB,KAEA,EAA0BvI,IAAMkC,SAAS,IAAzC,mBAAOP,EAAP,KAAc6G,EAAd,KAEA,EAAkCxI,IAAMkC,UAAS,GAAjD,mBAAO3C,EAAP,KAAmBkJ,EAAnB,KAEA,EAA0BzI,IAAMkC,SAAS,IAAzC,mBAAOuE,GAAP,KAAciC,GAAd,KAEA,GAAgD1I,IAAMkC,UAAS,GAA/D,qBAAOyG,GAAP,MAA0BC,GAA1B,MAEA,GAAgC5I,IAAMkC,UAAS,GAA/C,qBAAO8E,GAAP,MAAkB6B,GAAlB,MAEA,GAAkC7I,IAAMkC,UAAS,GAAjD,qBAAOnD,GAAP,MAAmB+J,GAAnB,MAEA,GC/BO,CACLC,WAbiB/I,IAAMgJ,aAAY,WAEnC,IAAMC,EAAwBC,OAAOC,WAAaC,SAASrD,KAAKsD,YAChED,SAASrD,KAAKuD,MAAMC,SAAW,SAC/BH,SAASrD,KAAKuD,MAAME,aAApB,UAAsCP,EAAtC,QACC,IASDQ,aAPmBzJ,IAAMgJ,aAAY,WACrCI,SAASrD,KAAKuD,MAAMC,SAAW,GAC/BH,SAASrD,KAAKuD,MAAME,aAAe,KAClC,KDiCIT,GAAP,GAAOA,WAAYU,GAAnB,GAAmBA,aAEbC,GAAUC,cAGhB,SAASC,KACPb,KACAlB,GAAyB,GAI3B,SAASgC,KACPd,KACAhB,GAA0B,GAI5B,SAAS+B,KACPf,KACAd,GAAuB,GAIzB,SAAS8B,GAAgBzJ,GACvByI,KACAV,EAAgB/H,GAIlB,SAAS0J,KACPjB,KACAZ,GAA2B,GAI7B,SAAS8B,KACPxB,GAAY,GAId,SAASyB,GAAgBC,GACvBzB,GAASyB,GAQX,SAASC,KACPxB,IAAmB,GACnBf,GAAyB,GACzBE,GAA0B,GAC1BE,GAAuB,GACvBI,EAAgB,IAChBF,GAA2B,GAC3BsB,KAsCF,SAASY,KACPzB,IAAmB,GA0BrB,SAAS0B,GAAehK,GACtB,IAAMI,EAAUJ,EAAKK,MAAMC,MAAK,SAAA2J,GAAO,OAAIA,EAAQ/J,MAAQ8H,EAAY9H,OAGvEsE,EAAI0F,qBAAqBlK,EAAKE,KAAME,GACnCkF,MAAK,SAACO,GACLqC,GAAS,SAACiC,GAAD,OAAWA,EAAM7I,KAAI,SAAC2I,GAAD,OAAaA,EAAQ/J,MAAQF,EAAKE,IAAM2F,EAAUoE,WAEjFG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAqE5B,OA3IA3K,IAAMgE,WAAU,WAEdc,EAAIgG,cACHlF,MAAK,SAACmF,GACLvC,EAASuC,MAEVL,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAG1B7F,EAAIkG,cACHpF,MAAK,SAACqF,GACL1C,EAAe0C,MAEhBP,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAO5B,WACE,IAAMjD,EAAQwD,aAAaC,QAAQ,SAChCzD,GACDF,EAAK4D,WAAW1D,GACb9B,MAAK,SAACyF,GAAD,OAAUA,KACfzF,MAAK,SAACR,GACL8E,GAAgB9E,EAAIiG,KAAK5E,OACzBwD,KACAP,GAAQ4B,KAAK,QAEdZ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAf9BY,KAEC,IA2HD,qBAAK3M,UAAU,gBAAf,SACE,eAACmB,EAAmByL,SAApB,CAA6B5I,MAAO0F,EAApC,UAEA,cAAC,EAAD,CAAQ/I,WAAYA,EAAYG,UAAW+G,GAAOhH,aAVtD,WACEyL,aAAaO,WAAW,SACxBhD,GAAY,GACZiB,GAAQ4B,KAAK,aAOmExM,gBA9JlF,WACEgK,IAAa/J,KA6JqGA,WAAYA,KAE1H,eAAC,IAAD,WAEE,cAAC,EAAD,CACEuI,OAAK,EAACC,KAAK,IACXhI,WAAYA,EACZ8H,UAAW,kBAAM,cAAC,EAAD,CACf/F,aAAcsI,GACdpI,cAAeqI,GACfnI,WAAYoI,GACZ7I,YAAa8I,GACbpI,MAAOA,EACPR,WAAYmJ,GACZtJ,YAAagJ,QAIjB,cAAC,EAAD,CACE1C,OAAK,EAACC,KAAK,IACXhI,WAAYA,EACZ8H,UAAWxF,IAGb,cAAC,IAAD,CAAO0F,KAAK,WAAZ,SACE,cAAC,EAAD,CAAUhE,MAAM,qEAAcM,aAAa,+GAAqBiD,WArD1E,SAAoBqD,EAAWuB,GAE7BlE,EAAKmE,SAASxB,EAAWuB,GACtB9F,MAAK,SAACR,GACFA,GACDiF,KACAxB,IAAW,GACXa,GAAQ4B,KAAK,cAEbjB,KACAxB,IAAW,OAGd6B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,WA2CxB,cAAC,IAAD,CAAOpD,KAAK,WAAZ,SACE,cAAC,EAAD,CAAOhE,MAAM,iCAAQM,aAAa,iCAAQ+C,QA5EpD,SAAiBuD,EAAWuB,GAE1BlE,EAAKoE,UAAUzB,EAAWuB,GACvB9F,MAAK,SAACyF,GACFA,EAAK3D,QACNwC,GAAgBC,GAChBe,aAAaW,QAAQ,QAASR,EAAK3D,OACnCuC,KACAP,GAAQ4B,KAAK,SAKhBZ,OAAM,WACLL,KACAxB,IAAW,cAkEX,cAAC,EAAD,CAAa5F,OAAQ0F,GAAmBxF,QAASiH,GAAgBpD,UAAWA,KAE5E,cAAC,EAAD,CAAkB/D,OAAQ6E,EAAwB3E,QAASiH,GAAgBzF,aA3IjF,SAA0B0G,GAExBvG,EAAIgH,YAAYT,GACfzF,MAAK,SAACqF,GACL1C,EAAe0C,GACfb,QAEDM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAoIqF9G,aAAa,2DAExH,cAAC,EAAD,CAAeZ,OAAQ+E,EAAqB7E,QAASiH,GAAgB1I,WAhG3E,SAA8BpB,GAE5BwE,EAAIiH,WAAWzL,GACdsF,MAAK,SAACoG,GACLxD,EAAS,CAACwD,GAAF,mBAAkBrK,KAC1ByI,QAEDM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAyFiF9G,aAAa,+CAEpH,cAAC,EAAD,CAAiBZ,OAAQ2E,EAAuBzE,QAASiH,GAAgBvF,eApI/E,SAA4BwG,GAE1BvG,EAAImH,cAAcZ,GACjBzF,MAAK,SAACqF,GACL1C,EAAe0C,GACfb,QAEDM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA6HuF9G,aAAa,2DAE1H,cAAC,EAAD,CAAYvD,KAAM8H,EAAcjF,QAASiH,KAEzC,cAAC,EAAD,CAAmBnH,OAAQiF,EAAyB/E,QAASiH,GAAgB9J,KAAM8H,EAAcvE,aAAa,eAAK0C,WAjHzH,SAA0BjG,GAExBwE,EAAIoH,WAAW5L,EAAKE,KACnBoF,MAAK,WACJ4C,GAAS,SAACiC,GAAD,OAAWA,EAAM0B,QAAO,SAAA5B,GAAO,OAAIA,EAAQ/J,MAAQF,EAAKE,UACjE4J,QAEDM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,eErL9ByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJlD,SAASmD,eAAe,W","file":"static/js/main.c962fca6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import React from \"react\";\r\n\r\nfunction HamburgerButton(props) {\r\n  return (\r\n    <div className='button link' onClick={props.handleMenuClick}>\r\n      <span className={`button__line ${props.isMenuOpen ? 'button__line_left' : '' }`}/>\r\n      <span className={`button__line ${props.isMenuOpen ? 'button__line_hidden' : '' }`}/>\r\n      <span className={`button__line ${props.isMenuOpen ? 'button__line_right' : '' }`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HamburgerButton","import React from 'react';\r\nimport headerLogo from '../images/logo.svg';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport HamburgerButton from './HamburgerButton';\r\n\r\nfunction Header(props) {\r\n\r\n  const location = useLocation();\r\n\r\n  const link = (location.pathname === '/' || location.pathname === '/sign-up') ? '/sign-in' : '/sign-up'; //адрес ссылки\r\n  const textLink = (location.pathname === '/') ? 'Выйти' : (location.pathname === '/sign-up') ? 'Войти' : 'Регистрация'; //заголовок ссылки\r\n  const classLink = (`header__link-push link ${props.isLoggedIn ? 'header__link-push_color_grey' : ''}`); //класс ссылки\r\n\r\n  //выход из профиля\r\n  function signOut(){\r\n    props.signOutClick()\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n        {props.isLoggedIn && props.isMenuOpen && (\r\n        \r\n          <div className='header__container header__container_type_burger-menu'>\r\n            {props.isLoggedIn ? (<p className='header__user'>{props.useremail}</p>) : ''}\r\n            <Link to={link} className={classLink} onClick={signOut}>{textLink}</Link>\r\n          </div>)\r\n        }\r\n        \r\n        <header className='header page__header'>\r\n          <Link className='logo link' to='/'>\r\n            <img className='header__logo' src={headerLogo} alt=\"Логотип\" />\r\n          </Link>\r\n\r\n          <div className='header__container header__container_type_profile-menu'>\r\n            {props.isLoggedIn ? (<p className='header__user'>{props.useremail}</p>) : ''}\r\n            <Link to={link} className={classLink} onClick={signOut}>{textLink}</Link>\r\n          </div>\r\n\r\n          {props.isLoggedIn && <HamburgerButton handleMenuClick={props.handleMenuClick} isMenuOpen={props.isMenuOpen}/>}\r\n\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\nfunction Card(props) {\r\n    \r\n  //сохранение данных карточки при клике\r\n  function handleClick() {\r\n    props.onCardClick({\r\n      name: props.card.name, \r\n      link: props.card.link\r\n    })\r\n  }\r\n  //функция постановки лайка/дизлайка\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card)\r\n  }\r\n  //функция открытия удаления карточки\r\n  function handleDeleteClick() {\r\n    props.onBtnDelete() //открытие попапа подтверждения\r\n    //сохраняем id карточки по которой был клик\r\n    props.onCardClick({\r\n      _id: props.card._id,\r\n    })\r\n  }\r\n\r\n  const currentUserData = React.useContext(CurrentUserContext); // подписались на контекст текущих данных пользователя\r\n  \r\n  const isOwner = props.card.owner._id === currentUserData._id; // определяем является ли пользователем текущим\r\n\r\n  const cardDeleteButtonClassName = (`cards__delete ${isOwner ? 'cards__delete_visible' : ''}`); // определяем класс кнопки удаления\r\n\r\n  const isLiked = props.card.likes.some(i => i._id === currentUserData._id); // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n\r\n  const cardLikeButtonClassName = (`cards__button ${isLiked ? 'cards__button_active' : ''}`); // определяем класс для кнопки лайка\r\n  \r\n  return (\r\n    <>\r\n      <li className='cards__item'>\r\n        <button className={cardDeleteButtonClassName} type='button' aria-label='Удалить' onClick={handleDeleteClick}></button>\r\n        <img className='cards__image' src={`${props.card.link}`} alt={`${props.card.name}`} onClick={handleClick} />\r\n        <div className='cards__desc'>\r\n          <h2 className='cards__subtitle'>{props.card.name}</h2>\r\n          <div className='cards__container-likes'>\r\n            <button className={cardLikeButtonClassName} type='button' aria-label='Лайк' onClick={handleLikeClick} ></button>\r\n            <p className='cards__sum-likes'>{props.card.likes.length}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n\r\n  const currentUserData = React.useContext(CurrentUserContext); //подключаем контект текущих данных пользователя\r\n \r\n  return (\r\n    <>\r\n      <main className='content page__section'>\r\n        <section className='profile page__profile'>\r\n          <div className='profile__container'>\r\n            <button className='profile__image-edit' onClick={props.onEditAvatar}>\r\n              <img className='profile__image' src={currentUserData.avatar} alt='Фото пользователя' />\r\n            </button>\r\n            <div className='profile__info'>\r\n              <h1 className='profile__name'>{currentUserData.name}</h1>\r\n              <button className='profile__edit link' type='button' aria-label='Редактировать данные профиля' onClick={props.onEditProfile}></button>\r\n              <p className='profile__desc'>{currentUserData.about}</p>\r\n            </div>\r\n          </div>\r\n          <button className='profile__button link' type='button' aria-label='Добавить новую карточку' onClick={props.onAddPlace}></button>\r\n        </section>\r\n\r\n          <section className='cards page__cards' aria-label='Карточки с изображениями'>\r\n            <ul className='cards__list'>\r\n              \r\n              {props.cards.map((card) => (\r\n                <Card card={card} key={card._id} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onBtnDelete={props.onBtnDelete}/>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n      </main>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n\r\n  const currentYear = new Date().getFullYear(); //сохранен текущий год в переменной\r\n \r\n  return (\r\n    <>\r\n      <footer className='footer page__section'>\r\n        <p className='footer__author'>&copy; {currentYear} Mesto Russia</p>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nexport function useForm() {\r\n\r\n  const [values, setValues] = React.useState({}); //состояние значений инпутов формы\r\n\r\n  const [errors, setErrors] = React.useState({}); //состояние ошибок инпутов формы\r\n\r\n  const [isValid, setValid] = React.useState(false); //состояние валидности формы\r\n\r\n\r\n  function handleChange(evt) {\r\n\r\n    let name = evt.target.name\r\n    let value = evt.target.value\r\n\r\n    //объект с инф-ии о значениях в инпуте\r\n    setValues({\r\n      ...values,\r\n      [name] : value,\r\n    })\r\n\r\n    //объект с инф-ии об ошибках в инпуте\r\n    setErrors({\r\n      ...errors,\r\n      [evt.target.name]: evt.target.validationMessage\r\n    })\r\n\r\n    setValid(evt.target.closest(\".form\").checkValidity());//состояние валидности формы\r\n  }\r\n\r\n  return {\r\n    values,\r\n    errors,\r\n    isValid,\r\n    setValues,\r\n    setErrors,\r\n    setValid,\r\n    handleChange,\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n return (\r\n    <>\r\n      <div className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : '' }`} onMouseDown ={props.onClose}>\r\n        <div className='popup__container' onMouseDown ={(evt) => evt.stopPropagation()}>\r\n          <button className='popup__close link' type='button' aria-label='Закрыть форму' onClick={props.onClose}></button>\r\n          <form className={`popup__form form form_type_${props.name}`} name={`form-${props.name}`} onSubmit={props.onSubmit} noValidate>\r\n            <h2 className=\"form__title\">{`${props.title}`}</h2>\r\n            <div className=\"form__items\">\r\n              {props.children}\r\n            </div>\r\n            <button className={`form__button ${props.disabledButton ? 'form__button_disabled' : ''}`} type=\"submit\" disabled={props.disabledButton}>{props.button}</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from \"react\";\r\nimport { useForm } from \"../hooks/useForm\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n  const [loader, setLoader] = React.useState(props.textOfButton); //начальное значение кнопки\r\n\r\n  const {values, errors, isValid, handleChange, setValues, setErrors, setValid} = useForm();\r\n  \r\n  //очищаем значение инпутов при монтировании\r\n  React.useEffect(() => {\r\n    setValid(false)\r\n    setValues({})\r\n    setErrors({})\r\n    setLoader(props.textOfButton);\r\n  }, [props.isOpen, props.textOfButton, setValues, setErrors, setValid]);\r\n\r\n  //передаем новые значения инпутов по сабмиту\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n  \r\n    // Передаём значения управляемых компонентов во внешний обработчик (название и ссылка на изображение)\r\n    props.onAddPlace({\r\n      subtitle: values.subtitle,\r\n      link: values.link,\r\n    });\r\n\r\n    setLoader('Создание...');\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm name='new-card' title='Новое место' textOfButton='Создать' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} button={loader} disabledButton={!isValid}>\r\n\r\n        <input className=\"form__item\" id=\"image-subtitle\" type=\"text\" name=\"subtitle\" placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" value={values.subtitle || ''} onChange={handleChange} required />\r\n        <span className=\"form__error image-subtitle-error\">{!isValid && errors.subtitle}</span>\r\n        <input className=\"form__item\" id=\"image-link\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" value={values.link || ''} onChange={handleChange} required />\r\n        <span className=\"form__error image-link-error\">{!isValid && errors.link}</span>\r\n\r\n      </PopupWithForm>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup","import React from \"react\";\r\n\r\nfunction ImagePopup(props) {\r\n  \r\n  return (\r\n    <>\r\n      <div className={`popup popup_type_image ${props.card.link && 'popup_opened'}`} onClick={props.onClose}>\r\n        <div className=\"popup__container popup__container_transparent\" onClick={(evt) => evt.stopPropagation()}>\r\n          <button className=\"popup__close link\" type=\"button\" aria-label=\"Закрыть\" onClick={props.onClose}></button>\r\n          <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\r\n          <h2 className=\"popup__subtitle\">{props.card.name}</h2>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport {useForm} from '../hooks/useForm'\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n  const currentUserData = React.useContext(CurrentUserContext); //подписываемся на контекст\r\n\r\n  const [loader, setLoader] = React.useState(props.textOfButton); //начальное значение кнопки\r\n\r\n  const {values, errors, isValid, handleChange, setValues, setErrors, setValid} = useForm();\r\n\r\n  // После загрузки текущего пользователя из API его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setValid(false)\r\n    setValues({...values, name: currentUserData.name, about: currentUserData.about})\r\n    setErrors({})\r\n    setLoader(props.textOfButton);\r\n  }, [currentUserData, props.isOpen, props.textOfButton, setValues, setErrors, setValid]); \r\n\r\n  //функция обновления данных пользователя по сабмиту\r\n  function handleSubmit(evt) {\r\n    \r\n    evt.preventDefault();\r\n  \r\n    // Передаём значения имени и описания во внешний обработчик\r\n    props.onUpdateUser({\r\n      name: values.name,\r\n      about: values.about,\r\n    });\r\n\r\n    setLoader('Сохранение...');\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm name='edit' title='Редактировать профиль' textOfButton='Сохранить' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} button={loader} disabledButton={!isValid}>\r\n\r\n        <input className=\"form__item\" id=\"name-profile\" type=\"text\" name=\"name\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" value={values.name || ''} onChange={handleChange} required />\r\n        <span className=\"form__error\">{!isValid && errors.name}</span>\r\n        <input className=\"form__item\" id=\"desc-profile\" type=\"text\" name=\"about\" placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" value={values.about || ''} onChange={handleChange} required />\r\n        <span className=\"form__error\">{!isValid && errors.about}</span>\r\n\r\n      </PopupWithForm>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport {useForm} from '../hooks/useForm'\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n  const [loader, setLoader] = React.useState(props.textOfButton); //начальное значение кнопки\r\n\r\n  const {values, errors, isValid, handleChange, setValues, setErrors, setValid} = useForm();\r\n\r\n  //очищаем значение инпутов при монтировании\r\n  React.useEffect(() => {\r\n    setValid(false);\r\n    setValues({});\r\n    setErrors({});\r\n    setLoader(props.textOfButton);\r\n  }, [props.isOpen, props.textOfButton, setValues, setErrors, setValid]);\r\n\r\n  //обновляем аватар по сабмиту\r\n  function handleSubmit(evt) {\r\n    // отменяем действие браузера по умолчанию\r\n    evt.preventDefault();\r\n  \r\n    props.onUpdateAvatar({\r\n      avatar: values.avatar,\r\n    });\r\n\r\n    setLoader('Сохранение...');\r\n\r\n  } \r\n\r\n  return (\r\n    <>\r\n    <PopupWithForm name='edit-avatar' title='Обновить аватар' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} button={loader} disabledButton={!isValid}>\r\n\r\n      <input className=\"form__item\" id=\"avatar-link\" type=\"url\" name=\"avatar\" placeholder=\"Ссылка на фото профиля\" value={values.avatar || ''} onChange={handleChange} required />\r\n      <span className=\"form__error avatar-link-error\">{!isValid && errors.avatar}</span>\r\n\r\n    </PopupWithForm>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup\r\n","//класс запроса к серверу\r\nclass Api {\r\n  constructor({url, headers}) {\r\n    this._url = url; //ссылка сервера\r\n    this._headers = headers; //заголовок\r\n  }\r\n\r\n  //метод проверки результата запроса к серверу\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json(); //возвращаем резульат, если нет ошибок\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`); //возвращаем статус ошибки\r\n  };\r\n\r\n   //метод, получающий список всех карточек с сервера\r\n  getAllCards() {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //получаем данные пользователя\r\n  getUserInfo() {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод редактирования данных пользователя\r\n  setUserInfo(info) {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: info.name,\r\n        about: info.about,\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод редактирования фото профиля\r\n  setUserAvatar(user) {\r\n    return fetch(`${this._url}users/me/avatar/`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: user.avatar,\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод добавления новой карточки на страницу\r\n  addNewCard(newCard) {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: newCard.subtitle, //новое описание\r\n        link: newCard.link, //новая ссыока\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод постановки лайка и дизлайка\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    return fetch(`${this._url}cards/likes/${cardId}`, {\r\n      method: isLiked ? \"PUT\" : \"DELETE\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод удаления карточки со страницы\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._url}cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n}\r\n \r\nconst api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-30/',\r\n  headers: {\r\n    authorization: '3ace1836-34ae-4def-81c7-968efe5e4e17',\r\n    \"content-type\": \"application/json\",\r\n  }\r\n})\r\n\r\nexport default api","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction PopupConfirmation(props) {\r\n\r\n  const [loader, setLoader] = React.useState(props.textOfButton) //текст кнопки сабмита\r\n\r\n  React.useEffect(() => {\r\n    setLoader(props.textOfButton)\r\n  }, [props.isOpen, props.textOfButton])\r\n\r\n  //функция удаления карточки\r\n  function removeCard(evt) {\r\n    evt.preventDefault()\r\n    props.removeCard(props.card) //передаем текущую карточку в функцию удаления\r\n    setLoader('Удаление...')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm name=\"delete-confirmation\" title=\"Вы уверены?\" isOpen={props.isOpen} onClose={props.onClose} button={loader} onSubmit={removeCard} />\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default PopupConfirmation","import React from \"react\";\r\nimport {useForm} from \"../hooks/useForm\"\r\n\r\nfunction AuthForm(props) {\r\n\r\n  const {values, errors, isValid, handleChange} = useForm();\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    props.onSubmit(values.email, values.password);\r\n      \r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <form className='form form_color_white' name='sign-in' onSubmit={handleSubmit} noValidate >\r\n        <h2 className='form__title form__title_place_sign-in'>{props.title}</h2>\r\n        <div className=\"form__items form__items_color_white\">\r\n          <input className='form__item form__item_color_white' id='user-email' type='email' name='email' placeholder='Email' value={values.email || ''} onChange={handleChange} required />\r\n          <span className=\"form__error\">{!isValid && errors.email}</span>\r\n          <input className='form__item form__item_color_white' id='password' type='password' name='password' placeholder='Пароль' value={values.password || ''} onChange={handleChange} required />\r\n          <span className=\"form__error\">{!isValid && errors.password}</span>\r\n        </div>\r\n          <button className='form__button form__button_color_white' type='submit'>{props.textOfButton}</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AuthForm","import React from 'react';\r\nimport AuthForm from './AuthForm';\r\n\r\nfunction Login(props) {\r\n\r\n  return (\r\n    <section className='authorize'>\r\n      <AuthForm title={props.title} onSubmit={props.onLogin} textOfButton={props.textOfButton}/>\r\n    </section>\r\n      \r\n  )\r\n}\r\n\r\nexport default Login","import React from \"react\";\r\nimport {Link, useHistory } from 'react-router-dom'\r\nimport AuthForm from \"./AuthForm\";\r\n\r\nfunction Register(props) {\r\n\r\n  return (\r\n    <section className=\"authorize\">\r\n      <AuthForm title={props.title} onSubmit={props.onRegister} textOfButton={props.textOfButton}/>\r\n      <div className=\"authorize__container\">\r\n        <p className=\"authorize__text\">Уже зарегистрированы?</p>\r\n        <Link to=\"/sign-in\" className=\"authorize__link link\">Войти</Link>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Register","export default __webpack_public_path__ + \"static/media/icon-success.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/icon-error.d4ce2a26.svg\";","import React from \"react\";\r\nimport iconSuccess from '../images/icon-success.svg'\r\nimport iconError from '../images/icon-error.svg'\r\n\r\nfunction InfoToolTip(props) {\r\n  \r\n  return (\r\n    <>\r\n    <div className={`popup ${props.isOpen ? 'popup_opened' : '' }`} onMouseDown={props.onClose}>\r\n        <div className='popup__container' onMouseDown ={(evt) => evt.stopPropagation()}>\r\n          <button className='popup__close link' type='button' aria-label='Закрыть форму' onClick={props.onClose}></button>\r\n          <div className=\"popup__result result\">\r\n            <img className=\"result__image\" src={props.isSuccess ? iconSuccess : iconError} alt={props.isSuccess ? 'Успешный результат' : 'Отрицательный результат'}/>\r\n            <p className=\"result__text\">{props.isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}</p>\r\n          </div>         \r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InfoToolTip","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({component: Component, ...props}) => {\r\n\r\n  return (\r\n    <Route exact path={props.path}>\r\n      {() => \r\n        props.isLoggedIn ? <Component {...props}/> : <Redirect to='/sign-in'/>\r\n      }\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute","const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\n//класс запроса к серверу\r\nclass Api {\r\n  constructor({url, headers}) {\r\n    this._url = url; //ссылка сервера\r\n    this._headers = headers; //заголовок\r\n  }\r\n\r\n  //метод проверки результата запроса к серверу\r\n  _checkResponse(res) {\r\n    try {\r\n      if (res.status === 200 || res.status === 201){\r\n        return res.json();\r\n      }\r\n    } catch(error){\r\n      return (error)\r\n    }\r\n  }\r\n\r\n  //регистрация\r\n  register(email, password) {\r\n    return fetch(`${this._url}/signup`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({email, password})\r\n    })\r\n    .then(this._checkResponse)\r\n  };\r\n\r\n  //аутентификация\r\n  authorize(email, password) {\r\n    return fetch(`${this._url}/signin`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({email, password})\r\n    })\r\n    .then(this._checkResponse)\r\n  };\r\n\r\n  //проверка токена\r\n  getContent(token) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {...this.headers, 'Authorization': `Bearer ${token}`}\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n}\r\n\r\nconst auth = new Api({\r\n  url: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  }\r\n})\r\n\r\nexport default auth","import React from 'react';\r\nimport '../index.css';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport AddPlacePopup from './AddPlacePopup ';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport api from '../utils/api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport PopupConfirmation from './PopupConfirmation';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport InfoToolTip from './InfoTooltip';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport auth from '../utils/auth';\r\nimport {useScrollLock} from '../hooks/useScrollLock'\r\n\r\nfunction App() {\r\n\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false); //состояние попапа \"обновить аватар\"\r\n\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false); //состояние попапа \"редактировать профиль\"\r\n\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false); //состояние попапа \"добавить карточку\"\r\n\r\n  const [isPopupConfirmationOpen, setIsPopupConfirmationOpen] = React.useState(false); //состояние попапа \"подтвердить удаление карточки\"\r\n\r\n  const [selectedCard, setSelectedCard] = React.useState({}) //состояние попапа с изображением\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({}); //стейт текущих данных пользователя\r\n\r\n  const [cards, setCards] = React.useState([]);//хук состояния карточки \r\n\r\n  const [isLoggedIn, setLoggedIn] = React.useState(false); //стейт, содержащий инф-ию о статусе пользователя\r\n\r\n  const [email, setEmail] = React.useState(''); //стейт, эл. почты пользователя\r\n\r\n  const [isInfoToolTipOpen, setInfoToolTipOpen] = React.useState(false); //состояние попапа результата регистрации\r\n\r\n  const [isSuccess, setSuccess] = React.useState(false); //состояние переменной об успешной/неуспешной регистрации\r\n\r\n  const [isMenuOpen, setMenuOpen] = React.useState(false); //состояние переменной открытия меню\r\n\r\n  const {lockScroll, unlockScroll} = useScrollLock(); //скролл и отмена скролла \r\n\r\n  const history = useHistory();\r\n  \r\n  //обработчик открытия попапа редактирования аватара профиля\r\n  function handleEditAvatarClick() {\r\n    lockScroll()\r\n    setIsEditAvatarPopupOpen(true)\r\n  }\r\n\r\n  //обработчик открытия попапа редактирования профиля\r\n  function handleEditProfileClick() {\r\n    lockScroll()\r\n    setIsEditProfilePopupOpen(true)\r\n  }\r\n\r\n  //обработчик открытия попапа добавления новой карточки\r\n  function handleAddPlaceClick() {\r\n    lockScroll()\r\n    setIsAddPlacePopupOpen(true)\r\n  }\r\n  \r\n  //обработчик клика по карточке\r\n  function handleCardClick(card) {\r\n    lockScroll()\r\n    setSelectedCard(card)\r\n  }\r\n\r\n  //обработчик открытия попапа подтверждения удаления карточки\r\n  function handlePopupConfirmationClick() {\r\n    lockScroll()\r\n    setIsPopupConfirmationOpen(true)\r\n  }\r\n\r\n  //обработчик статуса пользователя\r\n  function handleLogin() {\r\n    setLoggedIn(true)\r\n  }\r\n\r\n  //обработчик эл. почты пользователя\r\n  function handleUserEmail(userEmail) {\r\n    setEmail(userEmail)\r\n  }\r\n\r\n  function handleMenuClick() {\r\n    setMenuOpen(!isMenuOpen)\r\n  }\r\n\r\n  //сброс состояний переменных\r\n  function closeAllPopups() {\r\n    setInfoToolTipOpen(false)\r\n    setIsEditAvatarPopupOpen(false)\r\n    setIsEditProfilePopupOpen(false)\r\n    setIsAddPlacePopupOpen(false)\r\n    setSelectedCard({})\r\n    setIsPopupConfirmationOpen(false)\r\n    unlockScroll()\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // Отправляем запрос в API и получаем первоначальный массив карточек\r\n    api.getAllCards()\r\n    .then((cardData) => {\r\n      setCards(cardData)\r\n    })\r\n    .catch(err => console.log(err))\r\n\r\n    //Отправляем запрос в API и получаем обновлённые данные пользователя\r\n    api.getUserInfo()\r\n    .then((userData) => {\r\n      setCurrentUser(userData); //обновили данные текущего пользователя\r\n    })\r\n    .catch(err => console.log(err))\r\n\r\n    tokenCheck();//проверка токена\r\n    \r\n  }, [])\r\n\r\n  //проверка токена пользователя\r\n  function tokenCheck() {\r\n    const token = localStorage.getItem('token'); //сохранили токен\r\n    if(token){\r\n      auth.getContent(token)\r\n        .then((data) => data)\r\n        .then((res) => {\r\n          handleUserEmail(res.data.email); //обновили стейт эл. почты пользователя\r\n          handleLogin(); //обновлен статус пользователя - зарегистрирован\r\n          history.push('/'); //переадресация на страницу пользователя\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  }\r\n\r\n  //обработчик модального окна успешной/неуспешной регистрации\r\n  function handleInfoTooltipClick() {\r\n    setInfoToolTipOpen(true);\r\n  }\r\n\r\n  //обновление данных пользователя(имя, описание)\r\n  function handleUpdateUser(data) {\r\n    // Отправляем запрос в API и получаем отредактированные данные пользователя\r\n    api.setUserInfo(data)\r\n    .then((userData) => {\r\n      setCurrentUser(userData);\r\n      closeAllPopups();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  //обновление аватара пользователя\r\n  function handleUpdateAvatar(data) {\r\n    // Отправляем запрос в API и получаем обновленный аватар пользователя\r\n    api.setUserAvatar(data)\r\n    .then((userData) => {\r\n      setCurrentUser(userData); //обновили ccылку на аватар пользователя\r\n      closeAllPopups();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  //функция постановки лайка/дизлайк\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(element => element._id === currentUser._id); // проверяем, поставлен ли лайк пользователем на карточке\r\n    \r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, !isLiked)\r\n    .then((newCard) => {\r\n      setCards((state) => state.map((element) => element._id === card._id ? newCard : element));\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n  \r\n  //функция удаления карточки\r\n  function handleCardDelete(card) {\r\n    // Отправляем запрос в API и получаем обновлённые массив карточек\r\n    api.deleteCard(card._id)\r\n    .then(() => {\r\n      setCards((state) => state.filter(element => element._id !== card._id)) //отфильтровали карточки по которым айди не совпали при клике на удаление\r\n      closeAllPopups()\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  //функция добавления карточки\r\n  function handleAddPlaceSubmit(card) {\r\n    // Отправляем запрос в API и получаем обновлённый массив карточек\r\n    api.addNewCard(card)\r\n    .then((newAddPlace) => {\r\n      setCards([newAddPlace, ...cards]); //обновили стейт карточек\r\n      closeAllPopups();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  //функция перехода на страницу пользователя\r\n  function onLogin(userEmail, userPassword) {\r\n\r\n    auth.authorize(userEmail, userPassword)\r\n      .then((data) => {\r\n        if(data.token) {\r\n          handleUserEmail(userEmail); //сохранили эл. почту пользователя в стейт\r\n          localStorage.setItem('token', data.token);//сохранили токен\r\n          handleLogin();//статус пользователя - зарегистрирован\r\n          history.push('/'); //переадресация на основную страницу\r\n        } else {\r\n          return\r\n        }\r\n      })\r\n      .catch(() => {\r\n        handleInfoTooltipClick(); //открытие модального окна с ошибкой\r\n        setSuccess(false);\r\n      })\r\n  }\r\n\r\n  function onRegister(userEmail, userPassword) {\r\n    \r\n    auth.register(userEmail, userPassword)\r\n      .then((res) => {\r\n        if(res) {\r\n          handleInfoTooltipClick(); //открытие модального окна\r\n          setSuccess(true); //сообщение об успешной регистраци\r\n          history.push('/sign-in');\r\n        } else {\r\n          handleInfoTooltipClick(); //открытие модального окна\r\n          setSuccess(false); //сообщение о проблеме при регистраци\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n  }\r\n  \r\n  //функция выхода из системы\r\n  function signOutClick(){\r\n    localStorage.removeItem('token'); //удалили токен\r\n    setLoggedIn(false); // обновили статус пользователя\r\n    history.push('/sign-in');//переадресация на странцицу входа\r\n  }\r\n\r\n  return (\r\n    <div className='page__content'>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n\r\n      <Header isLoggedIn={isLoggedIn} useremail={email} signOutClick={signOutClick} handleMenuClick={handleMenuClick} isMenuOpen={isMenuOpen} />\r\n      \r\n        <Switch>\r\n\r\n          <ProtectedRoute\r\n            exact path='/'\r\n            isLoggedIn={isLoggedIn}\r\n            component={() => <Main \r\n              onEditAvatar={handleEditAvatarClick}\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onCardClick={handleCardClick}\r\n              cards={cards}\r\n              onCardLike={handleCardLike}\r\n              onBtnDelete={handlePopupConfirmationClick}\r\n            />}\r\n          />\r\n\r\n          <ProtectedRoute\r\n            exact path='/'\r\n            isLoggedIn={isLoggedIn}\r\n            component={Footer}\r\n          />\r\n\r\n          <Route path='/sign-up'>\r\n            <Register title='Регистрация' textOfButton='Зарегистрироваться' onRegister={onRegister}/>          \r\n          </Route>\r\n\r\n          <Route path='/sign-in'>\r\n            <Login title='Войти' textOfButton='Войти' onLogin={onLogin} />\r\n          </Route>\r\n\r\n        </Switch>\r\n\r\n        <InfoToolTip isOpen={isInfoToolTipOpen} onClose={closeAllPopups} isSuccess={isSuccess}/>\r\n\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} textOfButton='Сохранить'/>\r\n\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} textOfButton='Создать'/>\r\n\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} textOfButton='Сохранить' />\r\n\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\r\n\r\n        <PopupConfirmation isOpen={isPopupConfirmationOpen} onClose={closeAllPopups} card={selectedCard} textOfButton=\"Да\" removeCard={handleCardDelete}/>\r\n\r\n      </CurrentUserContext.Provider>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nexport function useScrollLock() {\r\n  const lockScroll = React.useCallback(() => {\r\n\r\n    const scrollBarCompensation = window.innerWidth - document.body.offsetWidth; //ширина скролла \r\n    document.body.style.overflow = 'hidden';\r\n    document.body.style.paddingRight = `${scrollBarCompensation}px`;\r\n  }, [])\r\n\r\n  const unlockScroll = React.useCallback(() => {\r\n    document.body.style.overflow = '';\r\n    document.body.style.paddingRight = '';\r\n  }, [])\r\n\r\n  return {\r\n    lockScroll,\r\n    unlockScroll\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App /> \r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}